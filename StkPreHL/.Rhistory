# remove all the variables in the environment
rm(list=ls())
#==========================================#
# import csv file
#==========================================#
data<-read.csv("uci-news-aggregator.csv",fill=T, sep=",", stringsAsFactors = FALSE)
class(data)
# [1] "data.frame"
dim(data)
# [1] 422419      8
names(data)
# [1] "ID"        "TITLE"     "URL"       "PUBLISHER" "CATEGORY"  "STORY"     "HOSTNAME"
# [8] "TIMESTAMP"
head(ID,20)
# [1] "ID"        "TITLE"     "URL"       "PUBLISHER" "CATEGORY"  "STORY"     "HOSTNAME"
# [8] "TIMESTAMP"
attach(data)
head(ID,20)
head(TITLE)
head(URL)
head(data)
#========
as.Date(as.POSIXct(TIMESTAMP, origin="1970-01-01"))
#========
as.Date(as.POSIXct(TIMESTAMP[1], origin="1970-01-01"))
#========
library(anytime)
#========
install.packages("anytime")
#========
#install.packages("anytime")
library(anytime)
as.Date(as.POSIXct(TIMESTAMP[1], origin="1970-01-01"))
anytime(TIMESTAMP[1])
TIMESTAMP[1]
anytime(1394470370698)
as.Date(as.POSIXct(TIMESTAMP[1]/1000, origin="1970-01-01"))
print(as.numeric(Sys.time()))
anytime(TIMESTAMP[1]/1000)
TIMESTAMP[1]
print(TIMESTAMP[1], digits = 16ï¼‰
print(TIMESTAMP[1], digits = 16)
anytime(TIMESTAMP[1]/1000)
as.Date(as.POSIXct(TIMESTAMP[1]/1000, origin="1970-01-01"))
#========
# https://www.epochconverter.com/ for reference
#install.packages("anytime")
# library(anytime)
as.Date(as.POSIXct(TIMESTAMP[1]/1000, origin="1970-01-01"))
?as.Date()
#========
# https://www.epochconverter.com/ for reference
#install.packages("anytime")
# library(anytime)
as.POSIXct(TIMESTAMP[1]/1000, origin="1970-01-01")
#========
# https://www.epochconverter.com/ for reference
#install.packages("anytime")
# library(anytime)
as.Date(as.POSIXct(TIMESTAMP[1]/1000, origin="1970-01-01"))
#========
# https://www.epochconverter.com/ for reference
#install.packages("anytime")
# library(anytime)
as.Date(as.POSIXct(TIMESTAMP/1000, origin="1970-01-01"))
#========
# https://www.epochconverter.com/ for reference
#install.packages("anytime")
# library(anytime)
# > as.POSIXct(TIMESTAMP[1]/1000, origin="1970-01-01")
# [1] "2014-03-11 00:52:50 CST"
as.Date(as.POSIXct(TIMESTAMP/1000, origin="1970-01-01"), "%Y-%m-%d %H:%M:%OS")
#========
# https://www.epochconverter.com/ for reference
#install.packages("anytime")
# library(anytime)
# > as.POSIXct(TIMESTAMP[1]/1000, origin="1970-01-01")
# [1] "2014-03-11 00:52:50 CST"
as.Date(as.POSIXct(TIMESTAMP[1]/1000, origin="1970-01-01", tz = "GMT"), "%Y-%m-%d %H:%M:%OS")
#========
# https://www.epochconverter.com/ for reference
#install.packages("anytime")
# library(anytime)
# > as.POSIXct(TIMESTAMP[1]/1000, origin="1970-01-01")
# [1] "2014-03-11 00:52:50 CST"
as.POSIXct(TIMESTAMP[1]/1000, origin="1970-01-01", tz = "GMT")
#========
# https://www.epochconverter.com/ for reference
#install.packages("anytime")
# library(anytime)
# > as.POSIXct(TIMESTAMP[1]/1000, origin="1970-01-01")
# [1] "2014-03-11 00:52:50 CST"
temp<-as.POSIXct(TIMESTAMP[1]/1000, origin="1970-01-01", tz = "GMT")
class(temp)
names(temp)
structure(TIMESTAMP[1],class=c('POSIXt','POSIXct'))
structure(TIMESTAMP[1]/1000,class=c('POSIXt','POSIXct'))
names(structure(TIMESTAMP[1]/1000,class=c('POSIXt','POSIXct')))
temp2<-structure(TIMESTAMP[1]/1000,class=c('POSIXt','POSIXct')
temp2<-structure(TIMESTAMP[1]/1000,class=c('POSIXt','POSIXct'))
temp2<-structure(TIMESTAMP[1]/1000, class=c('POSIXt','POSIXct'))
class(temp2)
names(temp2)
#========
# https://www.epochconverter.com/ for reference
#install.packages("anytime")
# library(anytime)
# > as.POSIXct(TIMESTAMP[1]/1000, origin="1970-01-01")
# [1] "2014-03-11 00:52:50 CST"
temp <- as.POSIXct(TIMESTAMP/1000, origin="1970-01-01", tz = "GMT")
temp
summary(temp)
range(temp)
class(mytime)
#========
# https://www.epochconverter.com/ for reference
#install.packages("anytime")
# library(anytime)
# > as.POSIXct(TIMESTAMP[1]/1000, origin="1970-01-01")
# [1] "2014-03-11 00:52:50 CST"
mytime <- as.POSIXct(TIMESTAMP/1000, origin="1970-01-01", tz = "GMT")
class(mytime)
range(mytime)
table(mytime)
# ====
table(CATEGORY)
# CATEGORY
# b      e      m      t
# 115967 152469  45639 108344
hist(CATEGORY)
# CATEGORY
# b      e      m      t
# 115967 152469  45639 108344
class(CATEGORY)
# [1] "character"
cat_Factor <- as.factor(CATEGORY)
# [1] "character"
barplot(prop.table(table(CATEGORY)))
STORY
table(STORY)
table(STORY[CATEGORY = "b"])
# ====
class(CATEGORY)
CATEGORY[1]
table(STORY[CATEGORY == "b"])
STORY[CATEGORY == "b"]
levels(STORY)
levels(STORY[CATEGORY == "b"])
#===
story_b = STORY[CATEGORY == "b"]
tsb <- as.data.frame(table(story_b))
tsb
dim(tsb)
tsb$Freq
hist(tsb$Freq)
dim(tsb)
# [1] 2019    2
story_e = STORY[CATEGORY == "e"]
tse <- as.data.frame(table(story_e))
dim(tse)
# [1] 2075    2
story_m = STORY[CATEGORY == "m"]
tsm <- as.data.frame(table(story_m))
dim(tsm)
story_t = STORY[CATEGORY == "t"]
# [1] 1347    2
story_t = STORY[CATEGORY == "t"]
tst <- as.data.frame(table(story_t))
dim(tst)
table(HOSTNAME)
# [1] 1789    2
#=======
data<-read.csv("DJIA_table.csv",fill=T, sep=",", stringsAsFactors = FALSE)
# [1] 1789    2
#=======
DJIA<-read.csv("DJIA_table.csv",fill=T, sep=",", stringsAsFactors = FALSE)
dim(DJIA)
# [1] 1989    7
names(DJIA)
# [1] "Date"      "Open"      "High"      "Low"       "Close"     "Volume"    "Adj.Close"
attach(DJIA)
class(Date)
Date[1]
as.Date(Date[1])
plot(as.Date(Date), Close)
plot(as.Date(Date), Close, type = "l")
plot(as.Date(Date), Close, type = "l", xlab = "Date", ylab = "Close Price")
range(Date)
# [1] "2008-08-08" "2016-07-01"
# ======
summary(Close)
# Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
# 6547   10913   13026   13463   16478   18312
hist(Close)
# Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
# 6547   10913   13026   13463   16478   18312
hist(Close, freq=F, main="Close Price (DJIA) Histogram", col=c(2,3), xlab="Close Price")
# Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
# 6547   10913   13026   13463   16478   18312
log_Close <- log(Close)
summary(log_Close)
hist(log_Close, freq=F, main="Log of Close Price (DJIA) Histogram", col=c(2,3), xlab="log(Close Price)")
# Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
# 8.787   9.298   9.475   9.479   9.710   9.815
log_Return<-log_Close[-1]-log_Return[-T]
# Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
# 8.787   9.298   9.475   9.479   9.710   9.815
log_Return<-log_Close[-1]-log_Close[-T]
summary(log_Return)
# Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
# 6547   10913   13026   13463   16478   18312
log_Close <- log(Close)
# Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
# 8.787   9.298   9.475   9.479   9.710   9.815
log_Return<-log_Close[-1]-log_Close[-T]
summary(log_Return)
log_Return
log_Close
diff(log_Close, differences = 1)
diff<-diff(log_Close, differences = 1)
diff[1]
log_Close[2]-log_Close[1]
# Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
# 8.787   9.298   9.475   9.479   9.710   9.815
log_Return<-diff(log_Close, differences = 1)
summary(log_Return)
hist(log_Return, freq=F, main="Log of Return (DJIA) Histogram", col=c(2,3), xlab="log(Return)")
plot(as.Date(Date), log_Close, type = "l", xlab = "Date", ylab = "log(Close Price)")
plot(as.Date(Date), log_Return, type = "l", xlab = "Date", ylab = "log(Return)")
dim(log_Return)
length(log_Return)
length(Date)
Date[-1]
Date[2]
plot(as.Date(Date[-1]), log_Return, type = "l", xlab = "Date", ylab = "log(Return)")
?read.csv
#==========================================#
# import csv file
#==========================================#
data<-read.csv("uci-news-aggregator.csv",fill=T, sep=" ", stringsAsFactors = FALSE)
#==========================================#
# import csv file
#==========================================#
data<-read.csv("uci-news-aggregator.csv",fill=T, sep="", stringsAsFactors = FALSE)
#==========================================#
# import csv file
#==========================================#
data<-read.csv("newsCorpora.csv",fill=T, sep="\t", stringsAsFactors = FALSE)
dim(data)
# [1] "ID"        "TITLE"     "URL"       "PUBLISHER" "CATEGORY"  "STORY"     "HOSTNAME"
# [8] "TIMESTAMP"
attach(data)
plot(ID)
names(IS)
names(data)
#==========================================#
# import csv file
#==========================================#
data<-read.csv("newsCorpora.csv",fill=F, sep="\t", stringsAsFactors = FALSE)
names(data)
data$X1
plot(data$X1)
